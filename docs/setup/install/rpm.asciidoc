[[rpm]]
=== 使用 RPM 包安装 Kibana

Kibana RPM 包可以从 <<install-rpm,我们的网站下载>>
或者从我们的  <<rpm-repo,RPM 仓库下载>> 。 RPM 包可以用来安装
Kibana 在任何基于 RPM 包管理的系统上 ，如 OpenSuSE ，SLES ，Centos ，Red Hat,
和 Oracle Enterprise 。

NOTE: RPM install is not supported on distributions with old versions of RPM,
such as SLES 11 and CentOS 5.  Please see <<targz>> instead.

Kibana 的最新稳定版本可以在
link:/downloads/kibana[下载  Kibana] 页找到 。 其他版本
下载在 link:/downloads/past-releases[过去的版本页] 。

[[rpm-key]]
==== 导入 Elastic PGP 秘钥

include::key.asciidoc[]

[source,sh]
-------------------------
rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
-------------------------

[[rpm-repo]]
==== 从 RPM 仓库安装

ifeval::["{release-state}"=="unreleased"]

Version {version} of Kibana has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

对于基于 RedHad 的发行版 ，在 `/etc/yum.repos.d/` 目录下
新建一个 `kibana.repo` 文件 ； 或者对于基于 OpenSuSE 的发行版， 在 `/etc/zypp/repos.d/` 目录下
新建一个 `kibana.repo` 文件 ， 包括 :

ifeval::["{release-state}"=="released"]

["source","sh",subs="attributes,callouts"]
--------------------------------------------------
[kibana-{major-version}]
name=Kibana repository for {major-version} packages
baseurl=https://artifacts.elastic.co/packages/{major-version}/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
--------------------------------------------------

endif::[]

ifeval::["{release-state}"=="prerelease"]

["source","sh",subs="attributes,callouts"]
--------------------------------------------------
[kibana-{major-version}]
name=Kibana repository for {major-version} packages
baseurl=https://artifacts.elastic.co/packages/{major-version}-prerelease/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
--------------------------------------------------

endif::[]

你的仓库准备就绪 ，可以使用了 。现在你可以用下面的命令来安装 Kibana ：

[source,sh]
--------------------------------------------------
sudo yum install kibana <1>
sudo dnf install kibana <2>
sudo zypper install kibana <3>
--------------------------------------------------
<1> 在CentOS 和基于较低版本的 Red Hat 发行版上使用  `yum` 。
<2> 在Fedora 和较高版本的 Red Hat 发行版上使用 `dnf` 。
<3> 在基于 OpenSUSE 的发行版上使用 `zypper` 。

endif::[]

[[install-rpm]]
==== 手动下载并安装 RPM 

ifeval::["{release-state}"=="unreleased"]

Version {version} of Kibana has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

Kibana v{version} 的 RPM 包可以按如下命令从网站下载安装：

["source","sh",subs="attributes"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/kibana/kibana-{version}-x86_64.rpm
sha1sum kibana-{version}-x86_64.rpm <1>
sudo rpm --install kibana-{version}-x86_64.rpm
--------------------------------------------
<1> 比较 `sha1sum` 或 `shasum` 产生的 SHA跟
    https://artifacts.elastic.co/downloads/kibana/kibana-{version}-x86_64.rpm.sha1[发布的 SHA]。

endif::[]

include::init-systemd.asciidoc[]

[[rpm-running-init]]
==== SysV `init` 运行 Kibana

使用 `chkconfig` 命令配置 Kibana 开机自动
启动 ：

[source,sh]
--------------------------------------------------
sudo chkconfig --add kibana
--------------------------------------------------

Kibana 可以用 `service` 命令来启动和停止：

[source,sh]
--------------------------------------------
sudo -i service kibana start
sudo -i service kibana stop
--------------------------------------------

不管什么原因 ，如果 Kibana 启动失败 ， 它会输出失败
原因到 STDOUT 。 日志文件在 `/var/log/kibana/` 目录下面 。


[[rpm-running-systemd]]
include::systemd.asciidoc[]

[[rpm-configuring]]
==== 通过配置文件配置 Kibana

Kibana 默认情况下从 `$KIBANA_HOME/config/kibana.yml`
加载配置文件 。该配置文件的格式在
<<settings>> 中做了说明 。

[[rpm-layout]]
==== RPM 文件目录

在基于 RPM 包的系统中 ， RPM 把 config files, logs, 和 data 目录放
在合适的位置 ：


[cols="<h,<,<m,<m",options="header",]
|=======================================================================
| 类型 | 描述 | 默认位置 | 设置
| home
  | Kibana 家目录或 `$KIBANA_HOME`
  | /usr/share/kibana
 d|

| bin
  | 二进制脚本 ，包括 `kibana` 启动 Kibana server
    和 `kibana-plugin` 安装插件
  | /usr/share/kibana/bin
 d|

| config
  | 配置文件 ，包括 `kibana.yml`
  | /etc/kibana
 d|

| data
  | Kibana 和其插件写入磁盘的数据文件位置
  | /var/lib/kibana
 d|

| optimize
  | 编译过的源码 。 某些管理操作 (如，插件安装)
    导致运行时重新编译源码 。
  | /usr/share/kibana/optimize
 d|

| plugins
  | 插件文件位置 。每一个插件都有一个单独的二级目录 。
  | /usr/share/kibana/plugins
 d|

|=======================================================================
